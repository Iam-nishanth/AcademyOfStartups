generator client {
    provider      = "prisma-client-js"
    binaryTargets = ["native", "linux-musl", "debian-openssl-1.1.x"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id         String   @id @default(uuid()) @map("user_id")
    name       String
    role       Role     @default(USER)
    userEmail  String   @unique
    password   String
    isVerified Boolean  @default(false) @map("is_verified")
    createdAt  DateTime @default(now()) @map("created_at")
    updatedAt  DateTime @updatedAt @map("updated_at")

    businesses Business[]
    OTP        String?    @map("otp")
}

model Business {
    id               String   @id @default(uuid()) @map("business_id")
    businessEmail    String   @unique
    ownerName        String
    phoneNo          String
    businessName     String   @map("business_name")
    businessCategory String   @map("business_category")
    registrationType String   @map("registration_type")
    productOrService String   @map("product_or_service")
    incNo            String?  @unique @map("inc_no")
    companyWebsite   String?  @map("company_website")
    panNo            String?  @unique @map("pan_no")
    gstNo            String?  @unique @map("gst_no")
    itrPerYear       String   @map("itr_per_year")
    address          String
    isVerified       Boolean  @default(false) @map("is_verified")
    createdAt        DateTime @default(now()) @map("created_at")
    updatedAt        DateTime @updatedAt @map("updated_at")
    Logo             String?  @map("logo")
    Status           String   @map("status")

    owner User @relation(fields: [businessEmail], references: [userEmail])
}

model Investor {
    id           String         @id @default(uuid())
    role         Role           @default(INVESTOR)
    gender       String
    email        String         @unique
    password     String
    name         String
    isVerified   Boolean        @default(false) @map("is_verified")
    createdAt    DateTime       @default(now()) @map("created_at")
    updatedAt    DateTime       @updatedAt @map("updated_at")
    InvestorInfo InvestorInfo[]

    OTP String? @map("otp")
}

model InvestorInfo {
    id                  String   @id @default(uuid())
    PhoneNo             String
    Address             String
    Image               String?
    InvestorType        String
    InvestmentRange     String
    DomainsOfInterest   String[]
    ExistingInvestments String?

    investor Investor @relation(fields: [id], references: [id])
}

model Event {
    id          String   @id @default(uuid()) @map("event_id")
    name        String
    subtitle    String?
    dates       String
    time        String
    location    String
    entryFee    String?
    description String?
    coverImage  String?
    paymentLink String?
    isPaid      Boolean? @default(false) @map("is_paid")
    isVerified  Boolean  @default(false) @map("is_verified")

    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")
}

enum Role {
    ADMIN
    USER
    INVESTOR
}
